name: CI/CD

on:
  push:
    branches:
      - main
env:
  DOTNET_DOWNLOAD_URL: "https://dotnetcli.azureedge.net/dotnet/Sdk/8.0.202/dotnet-sdk-8.0.202-linux-x64.tar.gz"
  DOTNET_FILE: "dotnet-sdk-8.0.202-linux-x64.tar.gz"
  SECRETS_MANAGER_ACCESS_TOKEN: ${{ secrets.SECRETS_MANAGER_ACCESS_TOKEN }}

jobs:
  ci:
    runs-on: ubuntu-latest
    
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download & install .NET SDK
        run: |
          mkdir dotnet
          cd dotnet
          curl -LO ${{ env.DOTNET_DOWNLOAD_URL }}
          tar zxf ${{ env.DOTNET_FILE }}
          rm -R ${{ env.DOTNET_FILE }}
          cd ../
          sudo rm -R /usr/share/dotnet
          sudo mv -f ./dotnet /usr/share/
      - name: Run tests
        run: |
          mkdir bin
          cd bin
          curl -LO https://github.com/bitwarden/sdk/releases/download/bws-v0.3.0/bws-x86_64-unknown-linux-gnu-0.3.0.zip
          unzip bws-x86_64-unknown-linux-gnu-0.3.0.zip
          chmod +x bws
          export PATH=$PATH:$PWD
          cd ../
          dotnet test CuplanOrganization.sln
  cd:
    needs: ci
    runs-on: ubuntu-latest
    
    timeout-minutes: 10
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: "cuplan-organization"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Replace placeholder version
        run: |
          sed -i 's/5123.0.0/${{ vars.MAJOR_VERSION }}.${{ vars.MINOR_VERSION }}.${{ env.PATCH_VERSION }}/' ./Organization/Organization.csproj
        env:
          PATCH_VERSION: ${{ github.run_number }}
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}